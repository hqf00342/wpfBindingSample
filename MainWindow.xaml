<Window x:Class="wpfBindingSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpfBindingSample"
        xmlns:vm="clr-namespace:wpfBindingSample.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="770">
    <Window.DataContext>
        <vm:ViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="250" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!--Grid0: DataGrid。見た目調整のため長くなっている-->
        <DataGrid Name="datagrid"
              ItemsSource="{Binding RectInfoCollection}"
              Background="White"
              Padding="5"
              HeadersVisibility="Column"
              ClipboardCopyMode="IncludeHeader"
              ColumnWidth="*"
              GridLinesVisibility="Horizontal"
              HorizontalGridLinesBrush="LightGray"
              AutoGenerateColumns="False"
              CurrentCellChanged="Datagrid_CurrentCellChanged"
              CanUserAddRows="True"
              SelectionMode="Single"
              CanUserDeleteRows="True"
              CanUserResizeColumns="True">

            <DataGrid.Columns>
                <!-- Bindingとカラム名を設定 -->
                <DataGridTextColumn Header="Name" MinWidth="50" Binding="{Binding Name}" />
                <DataGridTextColumn Header="X" Binding="{Binding X}" />
                <DataGridTextColumn Header="Y" Binding="{Binding Y}" />

                <!-- 削除ボタンを配置 -->
                <DataGridTemplateColumn Header="操作" DisplayIndex="3">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="削除" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.DeleteItemCommand}" CommandParameter="{Binding}" Margin="2" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!--Grid1: 縦スプリッター -->
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

        <!--Grid2: CanvasにItemsとSelectedItem機能を付与したMyCanvas-->
        <local:MyCanvas Grid.Column="2"
                        Items="{Binding RectInfoCollection}"
                        SelectedItem="{Binding ElementName=datagrid,Path=SelectedItem, Mode=TwoWay}" />

        <!--Grid3: CanvasベースのListBox -->
        <ListBox Grid.Column="3" 
                 x:Name="listbox"
                 Background="#ffeeee"
                 ItemsSource="{Binding RectInfoCollection}" 
                 SelectedItem="{Binding ElementName=datagrid,Path=SelectedItem, Mode=TwoWay}"
                 MouseMove="Rect_mouseMove" 
                 MouseUp="Rect_mouseUp">

            <!--ベースをCanvasに変更-->
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <!--RectangleとデータのBinding設定-->
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <!-- XY座標をバインディングさせる -->
                    <Setter Property="Canvas.Left" Value="{Binding X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    <!-- 標準のListboxが持つ選択枠表示を消すためにテンプレートをクリア -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Rectangle x:Name="r" Fill="Blue" Width="20" Height="20" MouseDown="Rect_mouseDown" MouseMove="Rect_mouseMove" MouseUp="Rect_mouseUp"/>
                                <!--<ContentPresenter/>-->
                                <ControlTemplate.Triggers>
                                    <!-- 選択時に赤く -->
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="r" Property="Fill" Value="Red"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <TextBlock Grid.Column="0" Grid.Row="1" FontWeight="Bold" FontSize="20" HorizontalAlignment="Center" Text="Datagrid"/>
        <TextBlock Grid.Column="2" Grid.Row="1" FontWeight="Bold" FontSize="20" HorizontalAlignment="Center" Text="Canvas"/>
        <TextBlock Grid.Column="3" Grid.Row="1" FontWeight="Bold" FontSize="20" HorizontalAlignment="Center" Text="ListBox"/>
    </Grid>
</Window>